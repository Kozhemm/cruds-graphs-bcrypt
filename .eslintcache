[{"D:\\ProjectsReactJS\\booktasks\\client\\src\\index.js":"1","D:\\ProjectsReactJS\\booktasks\\client\\src\\reportWebVitals.js":"2","D:\\ProjectsReactJS\\booktasks\\client\\src\\App.js":"3","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\admin\\Admin.jsx":"4","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\division\\Division.jsx":"5","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\client\\Client.jsx":"6","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\type_of_work\\TypeOfWork.jsx":"7","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\type_of_breakage\\TypeOfBreakage.jsx":"8","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\hardware\\Hardware.jsx":"9","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\breakage\\Breakage.jsx":"10","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\result_of_work\\ResultOfWork.jsx":"11","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\registration\\Registration.jsx":"12","D:\\ProjectsReactJS\\booktasks\\client\\src\\Prewiew.jsx":"13","D:\\ProjectsReactJS\\booktasks\\client\\src\\specialQuestions\\listHardware\\ListHardware.jsx":"14","D:\\ProjectsReactJS\\booktasks\\client\\src\\specialQuestions\\diagramwork\\DiagramWork.jsx":"15","D:\\ProjectsReactJS\\booktasks\\client\\src\\specialQuestions\\diagrambreakage\\DiagramBreakage.jsx":"16","D:\\ProjectsReactJS\\booktasks\\client\\src\\specialQuestions\\ListHardQuestions.jsx":"17","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\footer\\Footer.jsx":"18","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\header\\Header.jsx":"19","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\MainTables.jsx":"20","D:\\ProjectsReactJS\\booktasks\\client\\src\\specialQuestions\\presendtationdialog\\PresentationDialogProc.jsx":"21","D:\\ProjectsReactJS\\booktasks\\client\\src\\specialQuestions\\listhardwarenotfixed\\HardwareNotFixed.jsx":"22","D:\\ProjectsReactJS\\booktasks\\client\\src\\specialQuestions\\listurgentrepairs\\UrgentRepairs.jsx":"23"},{"size":273,"mtime":1611243515508,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":1234,"mtime":1612561454223,"results":"27","hashOfConfig":"25"},{"size":6217,"mtime":1611131881039,"results":"28","hashOfConfig":"25"},{"size":4648,"mtime":1610573636092,"results":"29","hashOfConfig":"25"},{"size":6514,"mtime":1610574995574,"results":"30","hashOfConfig":"25"},{"size":4036,"mtime":1610609758576,"results":"31","hashOfConfig":"25"},{"size":5018,"mtime":1610609733101,"results":"32","hashOfConfig":"25"},{"size":5983,"mtime":1610576527879,"results":"33","hashOfConfig":"25"},{"size":7954,"mtime":1611408625022,"results":"34","hashOfConfig":"25"},{"size":5147,"mtime":1611728483738,"results":"35","hashOfConfig":"25"},{"size":2486,"mtime":1612563546631,"results":"36","hashOfConfig":"25"},{"size":996,"mtime":1611258575702,"results":"37","hashOfConfig":"25"},{"size":1477,"mtime":1611592514504,"results":"38","hashOfConfig":"25"},{"size":1555,"mtime":1611646934629,"results":"39","hashOfConfig":"25"},{"size":1335,"mtime":1611320826818,"results":"40","hashOfConfig":"25"},{"size":1714,"mtime":1611647559258,"results":"41","hashOfConfig":"25"},{"size":230,"mtime":1610996013157,"results":"42","hashOfConfig":"25"},{"size":280,"mtime":1609952074250,"results":"43","hashOfConfig":"25"},{"size":1549,"mtime":1611258565270,"results":"44","hashOfConfig":"25"},{"size":1339,"mtime":1611320296675,"results":"45","hashOfConfig":"25"},{"size":1971,"mtime":1611593629491,"results":"46","hashOfConfig":"25"},{"size":1931,"mtime":1611440464073,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"1mfxl2x",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"D:\\ProjectsReactJS\\booktasks\\client\\src\\index.js",["110"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n    <App/>,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n",["111","112"],"D:\\ProjectsReactJS\\booktasks\\client\\src\\reportWebVitals.js",[],"D:\\ProjectsReactJS\\booktasks\\client\\src\\App.js",["113"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Prewiew from \"./Prewiew\";\nimport Registration from \"./components/registration/Registration\";\nimport ListHardware from \"./specialQuestions/listHardware/ListHardware\";\nimport DiagramWork from \"./specialQuestions/diagramwork/DiagramWork\";\nimport DiagramBreakage from \"./specialQuestions/diagrambreakage/DiagramBreakage\";\nimport HardwareNotFixed from \"./specialQuestions/listhardwarenotfixed/HardwareNotFixed\";\nimport UrgentRepairs from \"./specialQuestions/listurgentrepairs/UrgentRepairs\";\n\n\nconst App = () => {\n\n    return (\n        <Router>\n            <Route path=\"/\" exact render={(props) => <Registration />} />{\"\"}\n            <Route path=\"/home\" exact render={() => <Prewiew />} />\n            <Route path=\"/listqhardware\" render={() => <ListHardware />} />\n            <Route path=\"/diagramwork\" render={() => <DiagramWork />} />\n            <Route path=\"/diagrambreakage\" render={() => <DiagramBreakage />} />\n            <Route path=\"/hardwarenotfixed\" render={() => <HardwareNotFixed />} />\n            <Route path=\"/urgentrepairs\" render={() => <UrgentRepairs />} />\n        </Router>\n    )\n};\n\nexport default App;","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\admin\\Admin.jsx",["114","115","116","117"],"import React, {useState} from 'react';\r\nimport './admin.css'\r\nimport axios from \"axios\";\r\n\r\nconst Admin = () => {\r\n    const [surname, setSurname] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [middleName, setMiddleName] = useState('')\r\n    const [workHours, setWorkHours] = useState('')\r\n\r\n    const [newSurName, setNewSurName] = useState('')\r\n    const [newName, setNewName] = useState('')\r\n    const [newMiddleName, setNewMiddleName] = useState('')\r\n\r\n    const [adminList, setAdminList] = useState([])\r\n    const [searchItem, setSearchItem] = useState('')\r\n    const getAdmin = () => {\r\n        axios.get(\"http://localhost:3001/workers_admin\").then((responce) => {\r\n            setAdminList(responce.data)\r\n        })\r\n    }\r\n    const addAdmin = () => {\r\n        axios.post(\"http://localhost:3001/create_admin\", {\r\n            surname: surname,\r\n            name: name,\r\n            middleName: middleName,\r\n            workHours: workHours\r\n        }).then(() => {\r\n            getAdmin()\r\n            setAdminList([...adminList, {\r\n                фамилия: surname,\r\n                имя: name,\r\n                отчество: middleName,\r\n                время_работы: workHours\r\n            }])\r\n        })\r\n    }\r\n    const updateAdminSurName = (id) => {\r\n        axios.put(\"http://localhost:3001/update_admin\", {\r\n            фамилия: newSurName,\r\n            имя: newName,\r\n            отчество: newMiddleName,\r\n            idадминистратор: id\r\n        }).then((responce) => {\r\n            getAdmin()\r\n            setAdminList(adminList.map((val) => {\r\n                return val.idадминистратор == id ? {\r\n                    id: val.idадминистратор,\r\n                    surname: val.фамилия,\r\n                    name: val.имя,\r\n                    middleName: val.отчество,\r\n                    workHours: val.время_работы\r\n                } : val\r\n            }))\r\n        })\r\n\r\n    }\r\n    const deleteAdminByName = (id) => {\r\n        axios.delete(`http://localhost:3001/delete_admin/${id}`).then((responce) => {\r\n            setAdminList(adminList.filter((val) => {\r\n                return val.idадминистратор != id\r\n            }))\r\n        })\r\n    }\r\n    return (\r\n\r\n        <div className=\"app\">\r\n            <div className=\"app_information\">\r\n                <div className=\"title_table\">Администраторы</div>\r\n                <label>Фамилия</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setSurname(event.target.value)\r\n\r\n                }}/>\r\n                <label>Имя</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setName(event.target.value)\r\n                }}/>\r\n                <label>Отчество</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setMiddleName(event.target.value)\r\n                }}/>\r\n                <label>Время работы</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setWorkHours(event.target.value)\r\n                }}/>\r\n\r\n                <button onClick={addAdmin}>Добавить</button>\r\n                <button onClick={getAdmin}>Показать</button>\r\n                <input type=\"text\" placeholder=\"поиск..\" onChange={(event) => {\r\n                    setSearchItem(event.target.value)\r\n                }}/>\r\n                <div className=\"workers\">\r\n                    {adminList.filter((val) => {\r\n                        if (searchItem == '') {\r\n                            return val\r\n                        } else if (val.фамилия.toLowerCase().includes(searchItem.toLowerCase())) {\r\n                            return val\r\n                        }\r\n                    }).map((val, key) => {\r\n                        return <div className=\"worker\">\r\n                            <div className=\"idIdentify\">№{val.idадминистратор}</div>\r\n                            <ul>\r\n                                <li>\r\n                                    <l>Фамилия:</l>\r\n                                    {val.фамилия}</li>\r\n                                <li>\r\n                                    <l>Имя:</l>\r\n                                    {val.имя}</li>\r\n                                <li>\r\n                                    <l>Отчество:</l>\r\n                                    {val.отчество}</li>\r\n                                <li>\r\n                                    <l>Время работы:</l>\r\n                                    {val.время_работы}</li>\r\n                            </ul>\r\n                            <div className=\"add\">\r\n                                <input type=\"text\" placeholder=\"Фамилия...\" onChange={(event) => {\r\n                                    setNewSurName(event.target.value)\r\n                                }}/>\r\n                                <input type=\"text\" placeholder=\"Имя...\" onChange={(event) => {\r\n                                    setNewName(event.target.value)\r\n                                }}/>\r\n                                <input type=\"text\" placeholder=\"Отчество...\" onChange={(event) => {\r\n                                    setNewMiddleName(event.target.value)\r\n                                }}/>\r\n                                <br/>\r\n                                <button onClick={() => {\r\n                                    updateAdminSurName(val.idадминистратор)\r\n\r\n                                }}>Изменить\r\n                                </button>\r\n                                <button onClick={() => {\r\n                                    deleteAdminByName(val.idадминистратор)\r\n                                }}> Удалить\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n        ;\r\n};\r\n\r\nexport default Admin;","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\division\\Division.jsx",["118","119","120","121"],"import React, {useState} from 'react';\r\nimport '../admin/admin.css'\r\nimport axios from \"axios\";\r\n\r\nconst Division = () => {\r\n    const [title, setTitle] = useState('')\r\n    const [workHours, setWorkHours] = useState('')\r\n    const [newTitle, setNewTitle] = useState('')\r\n\r\n    const [divisionList, setDivisionList] = useState([])\r\n    const [searchItem, setSearchItem] = useState('')\r\n    const getAdmin = () => {\r\n        axios.get(\"http://localhost:3001/workers_division\").then((responce) => {\r\n            setDivisionList(responce.data)\r\n        })\r\n    }\r\n    const addAdmin = () => {\r\n        axios.post(\"http://localhost:3001/create_division\", {\r\n            title: title,\r\n            workHours: workHours\r\n        }).then(() => {\r\n            getAdmin()\r\n            setDivisionList([...divisionList, {\r\n                название: title,\r\n                время_работы: workHours\r\n            }])\r\n        })\r\n    }\r\n    const updateAdminSurName = (id) => {\r\n        axios.put(\"http://localhost:3001/update_division\", {\r\n            название: newTitle,\r\n            idподразделения: id\r\n        }).then((responce) => {\r\n            setDivisionList(divisionList.map((val) => {\r\n                getAdmin()\r\n                return val.idподразделения == id ? {\r\n                    id: val.idподразделения,\r\n                    title: val.название,\r\n                    workHours: val.время_работы\r\n                } : val\r\n            }))\r\n        })\r\n\r\n    }\r\n    const deleteAdminByName = (id) => {\r\n        axios.delete(`http://localhost:3001/delete_division/${id}`).then((responce) => {\r\n            setDivisionList(divisionList.filter((val) => {\r\n                return val.idподразделения != id\r\n            }))\r\n        })\r\n    }\r\n    return (\r\n\r\n        <div className=\"app\">\r\n            <div className=\"app_information\">\r\n                <div className=\"title_table\">Подразделения</div>\r\n                <label>Название</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setTitle(event.target.value)\r\n                }}/>\r\n                <label>Время работы</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setWorkHours(event.target.value)\r\n                }}/>\r\n\r\n                <button onClick={addAdmin}>Добавить</button>\r\n                <button onClick={getAdmin}>Показать</button>\r\n                <input type=\"text\" placeholder=\"поиск..\" onChange={(event) => {\r\n                    setSearchItem(event.target.value)\r\n                }}/>\r\n                <div className=\"workers\">\r\n                    {divisionList.filter((val) => {\r\n                        if (searchItem == '') {\r\n                            return val\r\n                        } else if (val.название.toLowerCase().includes(searchItem.toLowerCase())) {\r\n                            return val\r\n                        }\r\n                    }).map((val, key) => {\r\n                        return <div className=\"worker\">\r\n                            <div className=\"idIdentify\">№{val.idподразделения}</div>\r\n                            <ul>\r\n                                <li>\r\n                                    <l>Название:</l>\r\n                                    {val.название}</li>\r\n                                <li>\r\n                                    <l>Время работы:</l>\r\n                                    {val.время_работы}</li>\r\n                            </ul>\r\n                            <div className=\"add\">\r\n                                <input type=\"text\" placeholder=\"Название...\" onChange={(event) => {\r\n                                    setNewTitle(event.target.value)\r\n                                }}/>\r\n                                <br/>\r\n                                <button onClick={() => {\r\n                                    updateAdminSurName(val.idподразделения)\r\n                                }}>Изменить\r\n                                </button>\r\n                                <button onClick={() => {\r\n                                    deleteAdminByName(val.idподразделения)\r\n                                }}> Удалить\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Division;","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\client\\Client.jsx",["122","123","124","125","126","127"],"import React, {useState} from 'react';\r\nimport '../admin/admin.css'\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Client = () => {\r\n    const [surname, setSurname] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [middleName, setMiddleName] = useState('')\r\n    const [id_Division, set_id_Division] = useState('')\r\n\r\n    const [newSurName, setNewSurName] = useState('')\r\n    const [newName, setNewName] = useState('')\r\n    const [newMiddleName, setNewMiddleName] = useState('')\r\n    const [newIdDivision, setNewIdDivision] = useState('')\r\n\r\n    const [clientList, setClientList] = useState([])\r\n    const [searchItem, setSearchItem] = useState('')\r\n\r\n    const [titleDivision, setTitleDivision] = useState('')\r\n    const getAdmin = () => {\r\n        axios.get(\"http://localhost:3001/workers_client\").then((responce) => {\r\n            setClientList(responce.data)\r\n        })\r\n    }\r\n    const addAdmin = () => {\r\n        axios.post(\"http://localhost:3001/create_client\", {\r\n            surname: surname,\r\n            name: name,\r\n            middleName: middleName,\r\n            id_Division: id_Division\r\n        }).then(() => {\r\n            getAdmin()\r\n            setClientList([...clientList, {\r\n                фамилия: surname,\r\n                имя: name,\r\n                отчество: middleName,\r\n                id_подразделения: id_Division\r\n            }])\r\n        })\r\n    }\r\n    const updateAdminSurName = (id) => {\r\n        axios.put(\"http://localhost:3001/update_client\", {\r\n            фамилия: newSurName,\r\n            имя: newName,\r\n            отчество: newMiddleName,\r\n            id_подразделения: newIdDivision,\r\n            idклиент: id\r\n        }).then((responce) => {\r\n            getAdmin()\r\n            setClientList(clientList.map((val) => {\r\n                return val.idклиент == id ? {\r\n                    id: val.idклиент,\r\n                    surname: val.фамилия,\r\n                    name: val.имя,\r\n                    middleName: val.отчество,\r\n                } : val\r\n            }))\r\n        })\r\n\r\n    }\r\n    const deleteAdminByName = (id) => {\r\n        axios.delete(`http://localhost:3001/delete_client/${id}`).then((responce) => {\r\n            setClientList(clientList.filter((val) => {\r\n                return val.idклиент != id\r\n            }))\r\n        })\r\n    }\r\n    return (\r\n\r\n        <div className=\"app\">\r\n            <div className=\"app_information\">\r\n                <div className=\"title_table\">Клиенты</div>\r\n                <label>Фамилия</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setSurname(event.target.value)\r\n                }}/>\r\n                <label>Имя</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setName(event.target.value)\r\n                }}/>\r\n                <label>Отчество</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setMiddleName(event.target.value)\r\n                }}/>\r\n                <label>Номер <br/> подразделения</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    set_id_Division(event.target.value)\r\n                }}/>\r\n                <button onClick={addAdmin}>Добавить</button>\r\n                <button onClick={getAdmin} >Показать</button>\r\n                <input type=\"text\" placeholder=\"поиск..\" onChange={(event) => {\r\n                    setSearchItem(event.target.value)\r\n                }}/>\r\n                <div className=\"workers\">\r\n                    {clientList.filter((val) => {\r\n                        if (searchItem == '') {\r\n                            return val\r\n                        } else if (val.фамилия.toLowerCase().includes(searchItem.toLowerCase())) {\r\n                            return val\r\n                        }\r\n                    }).map((val, key) => {\r\n                        return <div className=\"worker\">\r\n                            <div className=\"idIdentify\">№{val.idклиент}</div>\r\n                            <ul>\r\n                                <li>\r\n                                    <l>Фамилия:</l>\r\n                                    {val.фамилия}</li>\r\n                                <li>\r\n                                    <l>Имя:</l>\r\n                                    {val.имя}</li>\r\n                                <li>\r\n                                    <l>Отчество:</l>\r\n                                    {val.отчество}</li>\r\n                                <li>\r\n                                    <l>Подразделение:</l>\r\n                                    {val.название}</li>\r\n                            </ul>\r\n                            <div className=\"add\">\r\n                                <input type=\"text\" placeholder=\"Фамилия...\" onChange={(event) => {\r\n                                    setNewSurName(event.target.value)\r\n                                }}/>\r\n                                <input type=\"text\" placeholder=\"Имя...\" onChange={(event) => {\r\n                                    setNewName(event.target.value)\r\n                                }}/>\r\n                                <input type=\"text\" placeholder=\"Отчество...\" onChange={(event) => {\r\n                                    setNewMiddleName(event.target.value)\r\n                                }}/>\r\n                                <input type=\"text\" placeholder=\"Номер подразделения...\" onChange={(event) => {\r\n                                    setNewIdDivision(event.target.value)\r\n                                }}/>\r\n                                <br/>\r\n                                <button onClick={() => {\r\n                                    updateAdminSurName(val.idклиент)\r\n                                }}>Изменить\r\n                                </button>\r\n                                <button onClick={() => {\r\n                                    deleteAdminByName(val.idклиент)\r\n                                }}> Удалить\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Client;","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\type_of_work\\TypeOfWork.jsx",["128","129","130","131"],"import React, {useState} from 'react';\r\nimport '../admin/admin.css'\r\nimport axios from \"axios\";\r\n\r\nconst TypeOfWork = () => {\r\n    const [title, setTitle] = useState('')\r\n    const [newTitle, setNewTitle] = useState('')\r\n    const [workList, setWorkList] = useState([])\r\n    const [searchItem, setSearchItem] = useState('')\r\n    const getAdmin = () => {\r\n        axios.get(\"http://localhost:3001/workers_typeofwork\").then((responce) => {\r\n            setWorkList(responce.data)\r\n        })\r\n    }\r\n    const addAdmin = () => {\r\n        axios.post(\"http://localhost:3001/create_typeofwork\", {\r\n            title: title,\r\n        }).then(() => {\r\n            getAdmin()\r\n            setWorkList([...workList, {\r\n                Наименование: title,\r\n            }])\r\n        })\r\n    }\r\n    const updateAdminSurName = (id) => {\r\n        axios.put(\"http://localhost:3001/update_typeofwork\", {\r\n            Наименование: newTitle,\r\n            idтип_работы: id\r\n        }).then((responce) => {\r\n            getAdmin()\r\n            setWorkList(workList.map((val) => {\r\n                return val.idтип_работы == id ? {\r\n                    id: val.idтип_работы,\r\n                    title: val.Наименование,\r\n                } : val\r\n            }))\r\n        })\r\n\r\n    }\r\n    const deleteAdminByName = (id) => {\r\n        axios.delete(`http://localhost:3001/delete_typeofwork/${id}`).then((responce) => {\r\n            setWorkList(workList.filter((val) => {\r\n                return val.idтип_работы != id\r\n            }))\r\n        })\r\n    }\r\n    return (\r\n\r\n        <div className=\"app\">\r\n            <div className=\"app_information\">\r\n                <div className=\"title_table\">Типы работ</div>\r\n                <label>Название</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setTitle(event.target.value)\r\n                }}/>\r\n                <button onClick={addAdmin}>Добавить</button>\r\n                <button onClick={getAdmin}>Показать</button>\r\n                <input type=\"text\" placeholder=\"поиск..\" onChange={(event) => {\r\n                    setSearchItem(event.target.value)\r\n                }}/>\r\n                <div className=\"workers\">\r\n                    {workList.filter((val) => {\r\n                        if (searchItem == '') {\r\n                            return val\r\n                        } else if (val.Наименование.toLowerCase().includes(searchItem.toLowerCase())) {\r\n                            return val\r\n                        }\r\n                    }).map((val, key) => {\r\n                        return <div className=\"worker\">\r\n                            <div className=\"idIdentify\">№{val.idтип_работы}</div>\r\n                            <ul>\r\n                                <li>\r\n                                    <l>Наименование:</l>\r\n                                    {val.Наименование}</li>\r\n                            </ul>\r\n                            <div className=\"add\">\r\n                                <input type=\"text\" placeholder=\"Название...\" onChange={(event) => {\r\n                                    setNewTitle(event.target.value)\r\n                                }}/>\r\n                                <br/>\r\n                                <button onClick={() => {\r\n                                    updateAdminSurName(val.idтип_работы)\r\n                                }}>Изменить\r\n                                </button>\r\n                                <button onClick={() => {\r\n                                    deleteAdminByName(val.idтип_работы)\r\n                                }}> Удалить\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypeOfWork;","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\type_of_breakage\\TypeOfBreakage.jsx",["132","133","134","135"],"import React, {useState} from 'react';\r\nimport '../admin/admin.css'\r\nimport axios from \"axios\";\r\n\r\nconst TypeOfBreakage = () => {\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    const [newTitle, setNewTitle] = useState('')\r\n    const [newDescription, setNewDescription] = useState('')\r\n\r\n    const [breakageList, setBreakageList] = useState([])\r\n    const [searchItem, setSearchItem] = useState('')\r\n    const getAdmin = () => {\r\n        axios.get(\"http://localhost:3001/workers_typeofbreakage\").then((responce) => {\r\n            setBreakageList(responce.data)\r\n        })\r\n    }\r\n    const addAdmin = () => {\r\n        axios.post(\"http://localhost:3001/create_typeofbreakage\", {\r\n            title: title,\r\n            description: description\r\n        }).then(() => {\r\n            getAdmin()\r\n            setBreakageList([...breakageList, {\r\n                Описание: description,\r\n                наименование: title\r\n\r\n            }])\r\n        })\r\n    }\r\n    const updateAdminSurName = (id) => {\r\n        axios.put(\"http://localhost:3001/update_typeofbreakage\", {\r\n            наименование: newTitle,\r\n            Описание: newDescription,\r\n            idТип_поломки: id\r\n        }).then((responce) => {\r\n            getAdmin()\r\n            setBreakageList(breakageList.map((val) => {\r\n                return val.idТип_поломки == id ? {\r\n                    id: val.idТип_поломки,\r\n                    title: val.наименование,\r\n                    description: val.Описание\r\n                } : val\r\n            }))\r\n        })\r\n\r\n    }\r\n    const deleteAdminByName = (id) => {\r\n        axios.delete(`http://localhost:3001/delete_typeofbreakage/${id}`).then((responce) => {\r\n            setBreakageList(breakageList.filter((val) => {\r\n                return val.idТип_поломки != id\r\n            }))\r\n        })\r\n    }\r\n    return (\r\n\r\n        <div className=\"app\">\r\n            <div className=\"app_information\">\r\n                <div className=\"title_table\">Типы поломок</div>\r\n                <label>Наименование</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setTitle(event.target.value)\r\n                }}/>\r\n                <label>Описание</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setDescription(event.target.value)\r\n                }}/>\r\n                <button onClick={addAdmin}>Добавить</button>\r\n                <button onClick={getAdmin}>Показать</button>\r\n                <input type=\"text\" placeholder=\"поиск..\" onChange={(event) => {\r\n                    setSearchItem(event.target.value)\r\n                }}/>\r\n                <div className=\"workers\">\r\n                    {breakageList.filter((val) => {\r\n                        if (searchItem == '') {\r\n                            return val\r\n                        } else if (val.наименование.toLowerCase().includes(searchItem.toLowerCase())) {\r\n                            return val\r\n                        }\r\n                    }).map((val, key) => {\r\n                        return <div className=\"worker\">\r\n                            <div className=\"idIdentify\">№{val.idТип_поломки}</div>\r\n                            <ul>\r\n                                <li>\r\n                                    <l>Наименование:</l>\r\n                                    {val.наименование}</li>\r\n                                <li>\r\n                                    <l>Описание:</l>\r\n                                    {val.Описание}</li>\r\n                            </ul>\r\n                            <div className=\"add\">\r\n                                <input type=\"text\" placeholder=\"Наименование...\" onChange={(event) => {\r\n                                    setNewTitle(event.target.value)\r\n                                }}/>\r\n                                <input type=\"text\" placeholder=\"Описание...\" onChange={(event) => {\r\n                                    setNewDescription(event.target.value)\r\n                                }}/>\r\n                                <br/>\r\n                                <button onClick={() => {\r\n                                    updateAdminSurName(val.idТип_поломки)\r\n                                }}>Изменить\r\n                                </button>\r\n                                <button onClick={() => {\r\n                                    deleteAdminByName(val.idТип_поломки)\r\n                                }}> Удалить\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypeOfBreakage;","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\hardware\\Hardware.jsx",["136","137","138","139"],"import React, {useState} from 'react';\r\nimport '../admin/admin.css'\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Hardware = () => {\r\n    const [title, setTitle] = useState('')\r\n    const [typeHardware, setTypeHardware] = useState('')\r\n    const [idClient, setIdClient] = useState('')\r\n\r\n    const [newTitle, setNewTitle] = useState('')\r\n    const [newTypeHardware, setNewTypeHardware] = useState('')\r\n    const [newIdClient, setNewIdClient] = useState('')\r\n\r\n    const [hardwareList, setHardwareList] = useState([])\r\n    const [searchItem, setSearchItem] = useState('')\r\n    const getAdmin = () => {\r\n        axios.get(\"http://localhost:3001/workers_hardware\").then((responce) => {\r\n            setHardwareList(responce.data)\r\n        })\r\n    }\r\n    const addAdmin = () => {\r\n        axios.post(\"http://localhost:3001/create_hardware\", {\r\n            title: title,\r\n            typeHardware: typeHardware,\r\n            idClient: idClient\r\n        }).then(() => {\r\n            getAdmin()\r\n            setHardwareList([...hardwareList, {\r\n                наименование: title,\r\n                тип_оборудования: typeHardware,\r\n                idклиента: idClient\r\n            }])\r\n        })\r\n    }\r\n    const updateAdminSurName = (id) => {\r\n        axios.put(\"http://localhost:3001/update_hardware\", {\r\n            наименование: newTitle,\r\n            тип_оборудования: newTypeHardware,\r\n            idклиента: newIdClient,\r\n            idоборудование: id\r\n        }).then((responce) => {\r\n            getAdmin()\r\n            setHardwareList(hardwareList.map((val) => {\r\n                return val.idоборудование == id ? {\r\n                    id: val.idоборудование,\r\n                    title: val.наименование,\r\n                    typeHardware: val.тип_оборудования,\r\n                    idClient: val.idклиента,\r\n                } : val\r\n            }))\r\n        })\r\n\r\n    }\r\n    const deleteAdminByName = (id) => {\r\n        axios.delete(`http://localhost:3001/delete_hardware/${id}`).then((responce) => {\r\n            setHardwareList(hardwareList.filter((val) => {\r\n                return val.idоборудование != id\r\n            }))\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"app\">\r\n            <div className=\"app_information\">\r\n                <div className=\"title_table\">Оборудование</div>\r\n                <label>Наименование</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setTitle(event.target.value)\r\n                }}/>\r\n                <label>Тип оборудования</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setTypeHardware(event.target.value)\r\n                }}/>\r\n                <label>Номер клиента</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setIdClient(event.target.value)\r\n                }}/>\r\n                <button onClick={addAdmin}>Добавить</button>\r\n                <button onClick={getAdmin}>Показать</button>\r\n                <input type=\"text\" placeholder=\"поиск..\" onChange={(event) => {\r\n                    setSearchItem(event.target.value)\r\n                }}/>\r\n                <div className=\"workers\">\r\n                    {hardwareList.filter((val) => {\r\n                        if (searchItem == '') {\r\n                            return val\r\n                        } else if (val.наименование.toLowerCase().includes(searchItem.toLowerCase())) {\r\n                            return val\r\n                        }\r\n                    }).map((val, key) => {\r\n                        return <div className=\"worker\">\r\n                            <div className=\"idIdentify\">№{val.idоборудование}</div>\r\n                            <ul>\r\n                                <li>\r\n                                    <l>Наименование:</l>\r\n                                    {val.наименование}</li>\r\n                                <li>\r\n                                    <l>Тип оборудования:</l>\r\n                                    {val.тип_оборудования}</li>\r\n                                <li>\r\n                                    <l>Клиент:</l>\r\n                                    {val.фамилия}</li>\r\n                            </ul>\r\n                            <div className=\"add\">\r\n                                <input type=\"text\" placeholder=\"Наименование...\" onChange={(event) => {\r\n                                    setNewTitle(event.target.value)\r\n                                }}/>\r\n                                <input type=\"text\" placeholder=\"Тип оборудования...\" onChange={(event) => {\r\n                                    setNewTypeHardware(event.target.value)\r\n                                }}/>\r\n                                <input type=\"text\" placeholder=\"Номер клиента...\" onChange={(event) => {\r\n                                    setNewIdClient(event.target.value)\r\n                                }}/>\r\n                                <br/>\r\n                                <button onClick={() => {\r\n                                    updateAdminSurName(val.idоборудование)\r\n                                }}>Изменить\r\n                                </button>\r\n                                <button onClick={() => {\r\n                                    deleteAdminByName(val.idоборудование)\r\n                                }}> Удалить\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Hardware;","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\breakage\\Breakage.jsx",["140","141","142","143"],"import React, {useState} from 'react';\r\nimport '../admin/admin.css'\r\nimport axios from \"axios\";\r\n\r\nconst Breakage = () => {\r\n    const [idHardware, setIdHardware] = useState('')\r\n    const [idAdmin, setIdAdmin] = useState('')\r\n    const [typeBreakage, setTypeBreakage] = useState('')\r\n    const [typeWork, setTypeWork] = useState('')\r\n    const [dateBreakage, setDateBreakage] = useState('')\r\n\r\n    const [newIdHardware, setNewIdHardware] = useState('')\r\n    const [newIdAdmin, setNewIdAdmin] = useState('')\r\n    const [newTypeBreakage, setNewTypeBreakage] = useState('')\r\n    const [newTypeWork, setNewTypeWork] = useState('')\r\n    const [newDateBreakage, setNewDateBreakage] = useState('')\r\n\r\n    const [breakageList, setBreakageList] = useState([])\r\n    const [searchItem, setSearchItem] = useState('')\r\n    const getAdmin = () => {\r\n        axios.get(\"http://localhost:3001/workers_breakage\").then((responce) => {\r\n            setBreakageList(responce.data)\r\n        })\r\n    }\r\n    const addAdmin = () => {\r\n        axios.post(\"http://localhost:3001/create_breakage\", {\r\n            idHardware: idHardware,\r\n            idAdmin: idAdmin,\r\n            typeBreakage: typeBreakage,\r\n            typeWork: typeWork,\r\n            dateBreakage: dateBreakage\r\n        }).then(() => {\r\n            getAdmin()\r\n            setBreakageList([...breakageList, {\r\n                id_оборудования: idHardware,\r\n                id_администратора: idAdmin,\r\n                тип_поломки: typeBreakage,\r\n                тип_работы: typeWork,\r\n                дата_поломки: dateBreakage\r\n            }])\r\n        })\r\n    }\r\n    const updateAdminSurName = (id) => {\r\n        axios.put(\"http://localhost:3001/update_breakage\", {\r\n            id_оборудования: newIdHardware,\r\n            id_администратора: newIdAdmin,\r\n            тип_поломки: newTypeBreakage,\r\n            тип_работы: newTypeWork,\r\n            дата_поломки: newDateBreakage,\r\n            id_поломки: id\r\n        }).then((responce) => {\r\n            getAdmin()\r\n            window.location.reload()\r\n            alert(\"Изменения выполнены успешно!\")\r\n            setBreakageList(breakageList.map((val) => {\r\n                return val.id_поломки == id ? {\r\n                    id: val.id_поломки,\r\n                    idHardware: val.id_оборудования,\r\n                    idAdmin: val.id_администратора,\r\n                    typeBreakage: val.тип_поломки,\r\n                    typeWork: val.тип_работы,\r\n                    dateBreakage: val.дата_поломки\r\n                } : val\r\n            }))\r\n        })\r\n\r\n    }\r\n    const deleteAdminByName = (id) => {\r\n        axios.delete(`http://localhost:3001/delete_breakage/${id}`).then((responce) => {\r\n            setBreakageList(breakageList.filter((val) => {\r\n                return val.id_поломки != id\r\n            }))\r\n        })\r\n    }\r\n    return (\r\n\r\n        <div className=\"app\">\r\n            <div className=\"app_information\">\r\n                <div className=\"title_table\">Поломка</div>\r\n                <label>Номер оборудования</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setIdHardware(event.target.value)\r\n\r\n                }}/>\r\n                <label>Номер администратора</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setIdAdmin(event.target.value)\r\n                }}/>\r\n                <label>Тип поломки</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setTypeBreakage(event.target.value)\r\n                }}/>\r\n                <label>Тип работы</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setTypeWork(event.target.value)\r\n                }}/>\r\n                <label>Дата поломки</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setDateBreakage(event.target.value)\r\n                }}/>\r\n\r\n\r\n                <button onClick={addAdmin}>Добавить</button>\r\n                <button onClick={getAdmin}>Показать</button>\r\n                <input type=\"text\" placeholder=\"поиск..\" onChange={(event) => {\r\n                    setSearchItem(event.target.value)\r\n                }}/>\r\n                <div className=\"workers\">\r\n                    {breakageList.filter((val) => {\r\n                        if (searchItem == '') {\r\n                            return val\r\n                        } else if (val.дата_поломки.toLowerCase().includes(searchItem.toLowerCase())) {\r\n                            return val\r\n                        }\r\n                    }).map((val, key) => {\r\n                        return <div className=\"worker\">\r\n                            <div className=\"idIdentify\">№{val.id_поломки}</div>\r\n                            <ul>\r\n                                <li>\r\n                                    <l>Оборудование:</l>\r\n                                    {val.оборуд_наим}</li>\r\n                                <li>\r\n                                    <l>Администратор:</l>\r\n                                    {val.фамилия}</li>\r\n                                <li>\r\n                                    <l>Тип поломки:</l>\r\n                                    {val.наименование}</li>\r\n                                <li>\r\n                                    <l>Тип работы:</l>\r\n                                    {val.Наименование}</li>\r\n                                <li>\r\n                                    <l>Дата поломки:</l>\r\n                                    {val.дата_поломки.slice(0, 10)}</li>\r\n                            </ul>\r\n                            <div className=\"add\">\r\n                                <input type=\"text\" placeholder=\"Номер оборудования...\" onChange={(event) => {\r\n                                    setNewIdHardware(event.target.value)\r\n                                }}/>\r\n                                <input type=\"text\" placeholder=\"Номер администратора...\" onChange={(event) => {\r\n                                    setNewIdAdmin(event.target.value)\r\n                                }}/>\r\n                                <input type=\"text\" placeholder=\"Тип поломки...\" onChange={(event) => {\r\n                                    setNewTypeBreakage(event.target.value)\r\n                                }}/>\r\n                                <input type=\"text\" placeholder=\"Тип работы...\" onChange={(event) => {\r\n                                    setNewTypeWork(event.target.value)\r\n                                }}/>\r\n                                <input type=\"text\" placeholder=\"Дата поломки...\" onChange={(event) => {\r\n                                    setNewDateBreakage(event.target.value)\r\n                                }}/>\r\n                                <br/>\r\n                                <button onClick={() => {\r\n                                    updateAdminSurName(val.id_поломки)\r\n                                }}>Изменить\r\n                                </button>\r\n                                <button onClick={() => {\r\n                                    deleteAdminByName(val.id_поломки)\r\n                                }}> Удалить\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n        ;\r\n};\r\n\r\nexport default Breakage;","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\result_of_work\\ResultOfWork.jsx",["144","145","146","147"],"import React, {useState} from 'react';\r\nimport '../admin/admin.css'\r\nimport axios from \"axios\";\r\n\r\nconst ResultOfWork = () => {\r\n    const [status, setStatus] = useState('')\r\n    const [idBreakage, setIdBreakage] = useState(0)\r\n\r\n    const [newStatus, setNewStatus] = useState('')\r\n    const [newIdBreakage, setNewIdBreakage] = useState(0)\r\n\r\n    const [resultsWorkList, setResultsWorkList] = useState([])\r\n    const [searchItem, setSearchItem] = useState('')\r\n    const getAdmin = () => {\r\n        axios.get(\"http://localhost:3001/workers_result\").then((responce) => {\r\n            setResultsWorkList(responce.data)\r\n        })\r\n    }\r\n    const addAdmin = () => {\r\n        axios.post(\"http://localhost:3001/create_result\", {\r\n            idBreakage: idBreakage,\r\n            status: status,\r\n        }).then((responce) => {\r\n            if (responce.data.messageResult) {\r\n                alert(\"Заполните поля!\")\r\n            } else {\r\n                getAdmin()\r\n                setResultsWorkList([...resultsWorkList, {\r\n                    id_поломки: idBreakage,\r\n                    статус: status,\r\n                }])\r\n            }\r\n        })\r\n        /*ВОЗМОЖНЫ ОШИБКИ*/\r\n    }\r\n    const updateAdminSurName = (id) => {\r\n        axios.put(\"http://localhost:3001/update_result\", {\r\n            статус: newStatus,\r\n            idрезультат: id,\r\n            id_поломки: newIdBreakage\r\n        }).then((responce) => {\r\n            setResultsWorkList(resultsWorkList.map((val) => {\r\n                getAdmin()\r\n                return val.idрезультат == id ? {\r\n                    id: val.idрезультат,\r\n                    idBreakage: val.id_поломки,\r\n                    status: val.статус\r\n                } : val\r\n            }))\r\n        })\r\n\r\n    }\r\n    const deleteAdminByName = (id) => {\r\n        axios.delete(`http://localhost:3001/delete_result/${id}`).then((responce) => {\r\n            setResultsWorkList(resultsWorkList.filter((val) => {\r\n                return val.idрезультат != id\r\n            }))\r\n        })\r\n    }\r\n    return (\r\n\r\n        <div className=\"app\">\r\n            <div className=\"app_information\">\r\n                <div className=\"title_table\">Результат работы</div>\r\n                <label>Номер поломки</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setIdBreakage(event.target.value)\r\n                }}/>\r\n                <label>Статус</label>\r\n                <input type=\"text\" onChange={(event) => {\r\n                    setStatus(event.target.value)\r\n                }}/>\r\n                <button onClick={addAdmin}>Добавить</button>\r\n                <button onClick={getAdmin}>Показать</button>\r\n                <input type=\"text\" placeholder=\"поиск..\" onChange={(event) => {\r\n                    setSearchItem(event.target.value)\r\n                }}/>\r\n                <div className=\"workers\">\r\n                    {resultsWorkList.filter((val) => {\r\n                        if (searchItem == '') {\r\n                            return val\r\n                        } else if (val.статус.toLowerCase().includes(searchItem.toLowerCase())) {\r\n                            return val\r\n                        }\r\n                    }).map((val, key) => {\r\n                        return <div className=\"worker\">\r\n                            <div className=\"idIdentify\">№{val.idрезультат}</div>\r\n                            <ul>\r\n                                <li>\r\n                                    <l>Номер поломки:</l>\r\n                                    {val.id_поломки}</li>\r\n                                <li>\r\n                                    <l>Статус:</l>\r\n                                    {val.статус}</li>\r\n                            </ul>\r\n                            <div className=\"add\">\r\n                                <input type=\"text\" placeholder=\"Номер поломки...\" onChange={(event) => {\r\n                                    setNewIdBreakage(event.target.value)\r\n                                }}/>\r\n                                <input type=\"text\" placeholder=\"Статус...\" onChange={(event) => {\r\n                                    setNewStatus(event.target.value)\r\n                                }}/>\r\n                                <br/>\r\n                                <button onClick={() => {\r\n                                    updateAdminSurName(val.idрезультат)\r\n                                }}>Изменить\r\n                                </button>\r\n                                <button onClick={() => {\r\n                                    deleteAdminByName(val.idрезультат)\r\n                                }}> Удалить\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResultOfWork;","D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\registration\\Registration.jsx",["148"],"import React, { useState, useEffect } from \"react\"\r\nimport \"./registration.css\"\r\nimport axios from \"axios\"\r\nimport { createBrowserHistory } from \"history\"\r\n\r\nconst Registration = () => {\r\n  const [usernameReg, setUsernameReg] = useState(\"\")\r\n  const [passwordReg, setPasswordReg] = useState(\"\")\r\n\r\n  const [userName, setUserName] = useState(\"\")\r\n  const [userPassword, setUserPassword] = useState(\"\")\r\n\r\n  const [loginStatus, setLoginStatus] = useState(\"\")\r\n\r\n  const customHistory = createBrowserHistory()\r\n  const register = () => {\r\n    axios\r\n      .post(\"http://localhost:3001\", {\r\n        имя: usernameReg,\r\n        пароль: passwordReg,\r\n      })\r\n      .then((responce) => {\r\n        if (responce.data.sucRegistr) {\r\n          setLoginStatus(responce.data.sucRegistr)\r\n        }\r\n        if (responce.data.messagelogin) {\r\n          setLoginStatus(responce.data.messagelogin)\r\n        }\r\n      })\r\n  }\r\n  const login = (props) => {\r\n    axios\r\n      .post(\"http://localhost:3001/login\", {\r\n        имя: userName,\r\n        пароль: userPassword,\r\n      })\r\n      .then((responce) => {\r\n        if (responce.data.message) {\r\n          setLoginStatus(responce.data.message)\r\n        } else {\r\n          setLoginStatus(responce.data[0].имя)\r\n          customHistory.push(\"/home\")\r\n          window.location.reload()\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"registerApp\">\r\n      <div className=\"registration\">\r\n        <h1>Регистрация</h1>\r\n        <label>Имя</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setUsernameReg(e.target.value)\r\n          }}\r\n        />\r\n        <label>Пароль</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setPasswordReg(e.target.value)\r\n          }}\r\n        />\r\n        <button onClick={register}>Зарегистрировать</button>\r\n      </div>\r\n      <div className=\"login\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Имя пользователя\"\r\n          onChange={(e) => {\r\n            setUserName(e.target.value)\r\n          }}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          onChange={(e) => {\r\n            setUserPassword(e.target.value)\r\n          }}\r\n        />\r\n        <button onClick={login}>Войти</button>\r\n      </div>\r\n      <h1>{loginStatus}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Registration\r\n","D:\\ProjectsReactJS\\booktasks\\client\\src\\Prewiew.jsx",["149","150","151","152","153","154","155","156","157"],"import Header from \"./components/header/Header\";\r\nimport Admin from \"./components/admin/Admin\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport Division from \"./components/division/Division\";\r\nimport Client from \"./components/client/Client\";\r\nimport './index.css'\r\nimport TypeOfWork from \"./components/type_of_work/TypeOfWork\";\r\nimport TypeOfBreakage from \"./components/type_of_breakage/TypeOfBreakage\";\r\nimport Hardware from \"./components/hardware/Hardware\";\r\nimport Breakage from \"./components/breakage/Breakage\";\r\nimport ResultOfWork from \"./components/result_of_work/ResultOfWork\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ListHardQuestions from \"./specialQuestions/ListHardQuestions\";\r\nimport MainTables from \"./components/MainTables\";\r\n\r\n\r\nconst Prewiew = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header/>\r\n            <MainTables/>\r\n            <ListHardQuestions/>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Prewiew;","D:\\ProjectsReactJS\\booktasks\\client\\src\\specialQuestions\\listHardware\\ListHardware.jsx",[],"D:\\ProjectsReactJS\\booktasks\\client\\src\\specialQuestions\\diagramwork\\DiagramWork.jsx",["158","159","160"],"import React, {useState} from 'react';\r\nimport {\r\n    ComposedChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip,\r\n    Legend,\r\n} from 'recharts';\r\nimport './diagrampauz.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DiagramWork = () => {\r\n    const [numberOfEmployee, setNumberOfEmoloyee] = useState('')\r\n\r\n    const data = [\r\n        {\r\n            name: 'Юридич', кол_тех: 2,\r\n        },\r\n        {\r\n            name: 'Производ', кол_тех: 7,\r\n        },\r\n        {\r\n            name: ' Бух', кол_тех: 22,\r\n        },\r\n        {\r\n            name: 'Плем', кол_тех: 5,\r\n        },\r\n\r\n    ];\r\n    return (\r\n        <div className=\"chartchart\">\r\n            <ComposedChart\r\n                layout=\"vertical\"\r\n                width={500}\r\n                height={400}\r\n                data={data}\r\n                margin={{\r\n                    top: 20, right: 20, bottom: 20, left: 20,\r\n                }}\r\n            >\r\n                <CartesianGrid stroke=\"#f5f5f5\"/>\r\n                <XAxis type=\"number\"/>\r\n                <YAxis dataKey=\"name\" type=\"category\"/>\r\n                <Tooltip/>\r\n                <Legend/>\r\n                <Area dataKey=\"кол_тех\" fill=\"dark\" stroke=\"slategray\"/>\r\n                <Bar dataKey=\"кол_тех\" barSize={15} fill=\"#F0FFFF\"/>\r\n            </ComposedChart>\r\n            <NavLink to=\"/home\">\r\n                <button className=\"btnBack\">Назад</button>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiagramWork;","D:\\ProjectsReactJS\\booktasks\\client\\src\\specialQuestions\\diagrambreakage\\DiagramBreakage.jsx",["161"],"import React, {PureComponent} from 'react';\r\nimport {\r\n    AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip,\r\n} from 'recharts';\r\nimport '../diagramwork/diagrampauz.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DiagramBreakage = () => {\r\n    const data = [\r\n        {\r\n            name: 'Принтер', count: 2\r\n        },\r\n        {\r\n            name: 'PC', count: 3\r\n        },\r\n        {\r\n            name: 'Ноутбуки', count: 1\r\n        },\r\n\r\n    ];\r\n    return (\r\n        <div className=\"chartchart\">\r\n            <AreaChart\r\n                width={500}\r\n                height={400}\r\n                data={data}\r\n                margin={{\r\n                    top: 10, right: 30, left: 0, bottom: 0,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"2 2\"/>\r\n                <XAxis dataKey=\"name\"/>\r\n                <YAxis/>\r\n                <Tooltip/>\r\n                <Area type=\"monotone\" dataKey=\"count\" stackId=\"1\" stroke=\"greenyellow\" fill=\"#A9A9A9\"/>\r\n                <Area type=\"monotone\" dataKey=\"count\" stackId=\"1\" stroke=\"#00FFFF\" fill=\"#2F4F4F\"/>\r\n            </AreaChart>\r\n            <NavLink to=\"/home\">\r\n                <button className=\"btnBack\">Назад</button>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiagramBreakage;","D:\\ProjectsReactJS\\booktasks\\client\\src\\specialQuestions\\ListHardQuestions.jsx",[],"D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\footer\\Footer.jsx",[],"D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\header\\Header.jsx",[],"D:\\ProjectsReactJS\\booktasks\\client\\src\\components\\MainTables.jsx",[],"D:\\ProjectsReactJS\\booktasks\\client\\src\\specialQuestions\\presendtationdialog\\PresentationDialogProc.jsx",[],["162","163"],"D:\\ProjectsReactJS\\booktasks\\client\\src\\specialQuestions\\listhardwarenotfixed\\HardwareNotFixed.jsx",[],"D:\\ProjectsReactJS\\booktasks\\client\\src\\specialQuestions\\listurgentrepairs\\UrgentRepairs.jsx",[],{"ruleId":"164","severity":1,"message":"165","line":3,"column":9,"nodeType":"166","messageId":"167","endLine":3,"endColumn":22},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"164","severity":1,"message":"172","line":2,"column":42,"nodeType":"166","messageId":"167","endLine":2,"endColumn":50},{"ruleId":"173","severity":1,"message":"174","line":47,"column":44,"nodeType":"175","messageId":"176","endLine":47,"endColumn":46},{"ruleId":"173","severity":1,"message":"177","line":61,"column":44,"nodeType":"175","messageId":"176","endLine":61,"endColumn":46},{"ruleId":"178","severity":1,"message":"179","line":94,"column":45,"nodeType":"180","messageId":"181","endLine":94,"endColumn":47},{"ruleId":"173","severity":1,"message":"174","line":95,"column":40,"nodeType":"175","messageId":"176","endLine":95,"endColumn":42},{"ruleId":"173","severity":1,"message":"174","line":36,"column":44,"nodeType":"175","messageId":"176","endLine":36,"endColumn":46},{"ruleId":"173","severity":1,"message":"177","line":48,"column":44,"nodeType":"175","messageId":"176","endLine":48,"endColumn":46},{"ruleId":"178","severity":1,"message":"179","line":72,"column":48,"nodeType":"180","messageId":"181","endLine":72,"endColumn":50},{"ruleId":"173","severity":1,"message":"174","line":73,"column":40,"nodeType":"175","messageId":"176","endLine":73,"endColumn":42},{"ruleId":"164","severity":1,"message":"182","line":20,"column":12,"nodeType":"166","messageId":"167","endLine":20,"endColumn":25},{"ruleId":"164","severity":1,"message":"183","line":20,"column":27,"nodeType":"166","messageId":"167","endLine":20,"endColumn":43},{"ruleId":"173","severity":1,"message":"174","line":52,"column":37,"nodeType":"175","messageId":"176","endLine":52,"endColumn":39},{"ruleId":"173","severity":1,"message":"177","line":65,"column":37,"nodeType":"175","messageId":"176","endLine":65,"endColumn":39},{"ruleId":"178","severity":1,"message":"179","line":96,"column":46,"nodeType":"180","messageId":"181","endLine":96,"endColumn":48},{"ruleId":"173","severity":1,"message":"174","line":97,"column":40,"nodeType":"175","messageId":"176","endLine":97,"endColumn":42},{"ruleId":"173","severity":1,"message":"174","line":32,"column":41,"nodeType":"175","messageId":"176","endLine":32,"endColumn":43},{"ruleId":"173","severity":1,"message":"177","line":43,"column":41,"nodeType":"175","messageId":"176","endLine":43,"endColumn":43},{"ruleId":"178","severity":1,"message":"179","line":62,"column":44,"nodeType":"180","messageId":"181","endLine":62,"endColumn":46},{"ruleId":"173","severity":1,"message":"174","line":63,"column":40,"nodeType":"175","messageId":"176","endLine":63,"endColumn":42},{"ruleId":"173","severity":1,"message":"174","line":40,"column":42,"nodeType":"175","messageId":"176","endLine":40,"endColumn":44},{"ruleId":"173","severity":1,"message":"177","line":52,"column":42,"nodeType":"175","messageId":"176","endLine":52,"endColumn":44},{"ruleId":"178","severity":1,"message":"179","line":75,"column":48,"nodeType":"180","messageId":"181","endLine":75,"endColumn":50},{"ruleId":"173","severity":1,"message":"174","line":76,"column":40,"nodeType":"175","messageId":"176","endLine":76,"endColumn":42},{"ruleId":"173","severity":1,"message":"174","line":45,"column":43,"nodeType":"175","messageId":"176","endLine":45,"endColumn":45},{"ruleId":"173","severity":1,"message":"177","line":58,"column":43,"nodeType":"175","messageId":"176","endLine":58,"endColumn":45},{"ruleId":"178","severity":1,"message":"179","line":86,"column":48,"nodeType":"180","messageId":"181","endLine":86,"endColumn":50},{"ruleId":"173","severity":1,"message":"174","line":87,"column":40,"nodeType":"175","messageId":"176","endLine":87,"endColumn":42},{"ruleId":"173","severity":1,"message":"174","line":56,"column":39,"nodeType":"175","messageId":"176","endLine":56,"endColumn":41},{"ruleId":"173","severity":1,"message":"177","line":71,"column":39,"nodeType":"175","messageId":"176","endLine":71,"endColumn":41},{"ruleId":"178","severity":1,"message":"179","line":109,"column":48,"nodeType":"180","messageId":"181","endLine":109,"endColumn":50},{"ruleId":"173","severity":1,"message":"174","line":110,"column":40,"nodeType":"175","messageId":"176","endLine":110,"endColumn":42},{"ruleId":"173","severity":1,"message":"174","line":44,"column":40,"nodeType":"175","messageId":"176","endLine":44,"endColumn":42},{"ruleId":"173","severity":1,"message":"177","line":56,"column":40,"nodeType":"175","messageId":"176","endLine":56,"endColumn":42},{"ruleId":"178","severity":1,"message":"179","line":79,"column":51,"nodeType":"180","messageId":"181","endLine":79,"endColumn":53},{"ruleId":"173","severity":1,"message":"174","line":80,"column":40,"nodeType":"175","messageId":"176","endLine":80,"endColumn":42},{"ruleId":"164","severity":1,"message":"184","line":1,"column":27,"nodeType":"166","messageId":"167","endLine":1,"endColumn":36},{"ruleId":"164","severity":1,"message":"185","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":13},{"ruleId":"164","severity":1,"message":"186","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":16},{"ruleId":"164","severity":1,"message":"187","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":14},{"ruleId":"164","severity":1,"message":"188","line":7,"column":8,"nodeType":"166","messageId":"167","endLine":7,"endColumn":18},{"ruleId":"164","severity":1,"message":"189","line":8,"column":8,"nodeType":"166","messageId":"167","endLine":8,"endColumn":22},{"ruleId":"164","severity":1,"message":"190","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":16},{"ruleId":"164","severity":1,"message":"191","line":10,"column":8,"nodeType":"166","messageId":"167","endLine":10,"endColumn":16},{"ruleId":"164","severity":1,"message":"192","line":11,"column":8,"nodeType":"166","messageId":"167","endLine":11,"endColumn":20},{"ruleId":"164","severity":1,"message":"193","line":12,"column":9,"nodeType":"166","messageId":"167","endLine":12,"endColumn":16},{"ruleId":"164","severity":1,"message":"194","line":3,"column":20,"nodeType":"166","messageId":"167","endLine":3,"endColumn":24},{"ruleId":"164","severity":1,"message":"195","line":10,"column":12,"nodeType":"166","messageId":"167","endLine":10,"endColumn":28},{"ruleId":"164","severity":1,"message":"196","line":10,"column":30,"nodeType":"166","messageId":"167","endLine":10,"endColumn":49},{"ruleId":"164","severity":1,"message":"197","line":1,"column":16,"nodeType":"166","messageId":"167","endLine":1,"endColumn":29},{"ruleId":"168","replacedBy":"198"},{"ruleId":"170","replacedBy":"199"},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["200"],"no-negated-in-lhs",["201"],"'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'titleDivision' is assigned a value but never used.","'setTitleDivision' is assigned a value but never used.","'useEffect' is defined but never used.","'Admin' is defined but never used.","'Division' is defined but never used.","'Client' is defined but never used.","'TypeOfWork' is defined but never used.","'TypeOfBreakage' is defined but never used.","'Hardware' is defined but never used.","'Breakage' is defined but never used.","'ResultOfWork' is defined but never used.","'NavLink' is defined but never used.","'Line' is defined but never used.","'numberOfEmployee' is assigned a value but never used.","'setNumberOfEmoloyee' is assigned a value but never used.","'PureComponent' is defined but never used.",["200"],["201"],"no-global-assign","no-unsafe-negation"]